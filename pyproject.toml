[build-system]
requires = [
    "setuptools>=64",
    "setuptools_scm>=8",
]
build-backend = "setuptools.build_meta"

[project]
name = "factorio-randovania-mod"
authors = [
    {name = "Henrique Gemignani Passos Lima"},
]
description = "Generator of Factorio Randomizer mods for Randovania"
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.11"
dynamic = ["version"]

dependencies = [
    # For validating the schema
    "jsonschema",
]

# Entry Points for PyInstaller
[project.entry-points.pyinstaller40]
hook-dirs = "factorio_randovania_mod.__pyinstaller:get_hook_dirs"


[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pre-commit",
]

typing = [
    "mypy",
    "types-Pillow",
    "types-pyinstaller",
    "types-jsonschema",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/randovania/factorio-randovania-mod"

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/factorio_randovania_mod/version.py"
git_describe_command = "git describe --dirty --tags --long --match v[0-9]*"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E", "F", "W", "C90", "I", "UP", "C4",
    "RSE",
    "TCH",
    "PTH",
    "COM818", "COM819",
    "ISC",
    "PIE",
    "PT",

    "PLC",
    "PLC0208",  # iterating over set is also not deterministic, so we shouldn't do that!

    "PLE",
    "PLR0402", "PLR1701", "PLR1711", "PLR1722", "PLR0206",
    "PLR0133", "PLR0124",
    "PLW",
]
extend-ignore = [
    "ISC001",  # may cause conflicts with formatter
]

[tool.ruff.lint.isort]
# This is very desirable, but causes issues with py-cord and some usages of construct_pack.encode
# required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 25.
# Defaults to 10, but we're being very flexible right now
max-complexity = 25

[tool.mypy]
files = [
    "src/",
]
follow_imports = "silent"
disallow_untyped_defs = true
local_partial_types = true